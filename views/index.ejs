<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet">
      <script type="text/x-template" id="modal-template">
      <transition name="modal">
        <div class="modal-mask">
          <div class="modal-wrapper">
            <div class="modal-container">

              <div class="modal-header">
                <slot name="header" class="mx-auto">
                  default header
                </slot>
              </div>

              <div class="modal-body">
                <slot name="body">
                  default body
                </slot>
              </div>

              <div class="modal-footer">
                <slot name="footer">
                </slot>
              </div>
            </div>
          </div>
        </div>
      </transition>
    </script>

  </head>
  <body class="bg-gray-800 text-center"> 
    <h1 class="text-2xl font-bold text-white"><%= title %></h1>
    <p class="text-lg text-white">Welcome to <%= title %></p>
  </body>
  <div id="app" class="w-11/12 text-center mx-auto">
    <!-- Input new todo -->
    <!-- <div class="input">
      <input class="py-2 px-4 my-2 rounded-md w-1/3" type="text" v-model="title" placeholder="Add new todo">
      <br>
      <input class="py-2 px-4 my-2 rounded-md w-1/3" type="text" v-model="description" placeholder="Add a description">
      <br>
      <button class="bg-green-500 hover:bg-purple-700 py-2 px-4 text-white font-bold" @click="addTodo">Add</button> -->

      <!-- <p v-if="errors.length">
        <b>Please correct the following error(s):</b>
        <ul>
          <li v-for="error in errors">{{ error }}</li>
        </ul>
      </p> -->
    <!-- </div> -->
    <!-- todo list -->
    <div class="my-2">
      <div class="border-pink-200 border-2 w-64 my-2 p-2 bg-indigo-600 bg-opacity-10 mx-auto" v-for="(todo, i) in todos" :key="todo.id">
        <h1>
          <!-- <span class="text-pink-200">{{ todo.id }}</span> -->
        </h1>
        <h3 class="font-sans font-medium text-lg text-white">
          {{ todo.title }}
        </h3>
        <p class="font-sans font-normal text-base text-white">
          {{ todo.description }}
        </p>
        <div class="flex justify-between">
          <a class="button bg-green-500 p-2" @click="editTodo(todo)">Edit</a>
          <a class="button bg-red-500 p-2" @click="deleteTodo(todo, todo.id)">Delete</a>
        </div> 
      </div>
    </div>
    <button id="show-modal" class="border-dashed border-2 border-blue-500 rounded-md p-2 text-white w-1/3" @click="showModal = true">Add new task</button>
    <!-- use the modal component, pass in the prop -->
    <modal v-if="showModal" @close="showModal = false">
      <h3 slot="header" class="mx-auto font-bold text-2xl">Add Task</h3>
      <!-- Input new todo -->
      <div slot="body" class="input">
        <input class="py-2 px-4 my-2 rounded-md w-full border-2 border-gray-400" type="text" v-model="title" placeholder="What are you working on?">
        <br>
        <input class="py-2 px-4 my-2 rounded-md w-full border-2 border-gray-400" type="text" v-model="description" placeholder="Add note">
      </div>
      <!-- modal footer -->
      <div slot="footer" class="flex flex-row-reverse gap-2">
        <button class="bg-blue-500 hover:bg-blue-700 py-2 px-4 text-white font-bold w-20" @click="addTodo">Save</button>
        <button class="bg-white bg-opacity-20 border-2 hover:border-red-500 border-gray-200 py-2 px-4 text-gray-400 hover:text-red-500 font-bold w-20" @click="showModal = false">Cancel</button>
      </div>
    </modal>
  </div>
  <script>
    //let axios = require('axios');

    //import axios from 'axios';
    //import "tailwindcss/tailwind.css";
    Vue.component('modal', {
      template: '#modal-template',
    });

var app = new Vue({
  el: '#app',
  data: {
    todos: [],
    showModal: false,
  },
  async mounted() {
    const response = await fetch('/todo');
    const todo = await response.json();
    this.todos = todo;
  },
  methods: {
    async addTodo() {
      const response = await fetch('/todo', {
        method: 'POST',
        body: JSON.stringify({
          title: this.title,
          description: this.description
        }),
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const todo = await response.json();

      this.errors = [];

      if (!this.title && !this.description) {
        alert('Please fill all the fields');
        // this.errors.push('Please fill all the fields');
        //return;
        if (!this.title) {
          this.errors.push('Name required.');
        }
        if (!this.description) {
          this.errors.push('Age required.');
        }
      }
      else {
        this.todos.push(todo);
      }
    },
    async deleteTodo(todo, id) {
      const response = await fetch(`/todo/` + id, {
        method: 'DELETE'
      });
      const index = this.todos.indexOf(todo);
      this.todos.splice(index, 1);
    }
  }
})
  </script>
</html>
